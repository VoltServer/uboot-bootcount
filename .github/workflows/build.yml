name: build

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
  workflow_dispatch:

jobs:
  multiarch-build:
    name: Build bootcount (arm64 + armv7)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (enable non-native arch emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Show buildx version
        run: docker buildx version

      - name: Build multi-arch artifacts (arm64, armv7)
        run: |
          docker buildx build \
            --platform linux/arm64,linux/arm/v7 \
            --target dist \
            --output type=local,dest=dist .

      - name: Summarize artifacts
        run: |
          echo "Listing dist directory"; find dist -maxdepth 3 -type f -print
          file dist/linux_arm64/bootcount || true
          file dist/linux_arm_v7/bootcount || true

      - name: Package per-arch tarballs
        run: |
          mkdir -p artifacts
          cp dist/linux_arm64/bootcount artifacts/bootcount-arm64
          cp dist/linux_arm_v7/bootcount artifacts/bootcount-armv7
          tar czf artifacts/bootcount-arm64.tar.gz -C dist/linux_arm64 bootcount COPYING README.md
          tar czf artifacts/bootcount-armv7.tar.gz -C dist/linux_arm_v7 bootcount COPYING README.md
          (cd artifacts && sha256sum *.tar.gz > SHA256SUMS)

      - name: Upload raw dist directory
        uses: actions/upload-artifact@v4
        with:
          name: dist-multiarch-${{ github.sha }}
          path: dist
          if-no-files-found: error

      - name: Upload packaged tarballs
        uses: actions/upload-artifact@v4
        with:
          name: bootcount-tarballs-${{ github.sha }}
          path: artifacts
          if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ multiarch-build ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bootcount-tarballs-${{ github.sha }}
          path: ./release-artifacts

      - name: Generate release notes stub
        id: notes
        run: |
          echo "Changes since previous release:" > NOTES.txt
          echo "\n(Autogenerated stub; edit as needed.)" >> NOTES.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: NOTES.txt
          files: |
            release-artifacts/*.tar.gz
            release-artifacts/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
